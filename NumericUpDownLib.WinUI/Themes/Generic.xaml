<!--  Copyright (c) Microsoft Corporation and Contributors.  -->
<!--  Licensed under the MIT License.  -->


<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:base="using:NumericUpDownLib.WinUI.Base"
    xmlns:controls="using:NumericUpDownLib.WinUI"
    xmlns:conv="using:NumericUpDownLib.WinUI.Converters">
    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="/NumericUpDownLib.WinUI;component/Base/InputBaseUpDown.xaml"></ResourceDictionary>-->

        <ResourceDictionary>
            <Style x:Key="InputBaseUpDownStyle1" TargetType="base:InputBaseUpDown">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="base:InputBaseUpDown">
                            <Grid>
                                <CheckBox IsChecked="{TemplateBinding IsReadOnly}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>

        <ResourceDictionary>
            <Style x:Key="InputBaseUpDownStyle" TargetType="base:InputBaseUpDown">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="base:InputBaseUpDown">
                            <Border
                                Height="32"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MinWidth}" VerticalAlignment="Center">
                                    <Grid.Resources>
                                        <conv:ByteToPlaceHolderStringConverter x:Key="ByteToPlaceHolderStringConverter" />
                                        <conv:BoolToVisibilityPropConverter x:Key="BoolToVisibilityConverter" />
                                    </Grid.Resources>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.RowSpan="2" Grid.Column="0">
                                        <!--
                                            Hidden measuring textbox ensure reservation of enough UI space
                                            according to DisplayLength dependency property
                                        -->

                                        <!--<TextBox
                                            x:Name="PART_Measuring_Element"
                                            Margin="0,0,1,0"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            HorizontalContentAlignment="Right"
                                            VerticalContentAlignment="{TemplateBinding VerticalAlignment}"
                                            AcceptsReturn="False"
                                            Background="Transparent"
                                            Foreground="Transparent"
                                            IsEnabled="False"
                                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisplayLength, Converter={StaticResource ByteToPlaceHolderStringConverter}}"
                                            TextAlignment="Left"
                                            Visibility="Collapsed" />-->

                                        <TextBox
                                            x:Name="PART_TextBox"
                                            Margin="0,4,0,0"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            AcceptsReturn="False"
                                            Background="{TemplateBinding Background}"
                                            BorderThickness="0"
                                            FontFamily="Consolas"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsReadOnly="{TemplateBinding IsReadOnly}"
                                            PlaceholderText="1234567988"
                                            TextAlignment="Right" />
                                        <!--  Background="{TemplateBinding Background}"  -->
                                        <!--  Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value,Mode=OneWay}"  -->

                                        <TextBlock
                                            Width="5"
                                            Margin="1,0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top"
                                            Foreground="{TemplateBinding EditingColorBrush}"
                                            Text="*"
                                            Visibility="{TemplateBinding EditingVisibility}" />
                                    </Grid>

                                    <!--  ArrowUp Increase value button  -->
                                    <RepeatButton
                                        x:Name="PART_IncrementButton"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Width="20"
                                        Height="14"
                                        Margin="0"
                                        Padding="0"
                                        HorizontalAlignment="Right"
                                        Command="{Binding Path=IncreaseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        Content="¡ü"
                                        FontSize="7"
                                        Visibility="{Binding Path=IsIncDecButtonsVisible, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <!--<RepeatButton.Content>
                                            <Path Data="M 0 4 L 6 4 L 3 0 Z" />
                                        </RepeatButton.Content>-->
                                    </RepeatButton>

                                    <!--  ArrowDown Decrease value button  -->

                                    <RepeatButton
                                        x:Name="PART_DecrementButton"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Width="20"
                                        Height="14"
                                        Margin="0"
                                        Padding="0"
                                        HorizontalAlignment="Right"
                                        Command="{Binding Path=DecreaseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        Content="¡ý"
                                        FontSize="7"
                                        Visibility="{Binding Path=IsIncDecButtonsVisible, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}}">

                                        <!--<TextBlock Margin="0" Padding="0" Text="¡ý" Height="10"></TextBlock>-->
                                        <!--<Path Height="10" Width="10" Data="M 0 0 L 3 4 L 6 0 Z" />-->

                                    </RepeatButton>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style BasedOn="{StaticResource InputBaseUpDownStyle}" TargetType="controls:ByteUpDown" />

            <!--  Styles a byte based numeric up down control based on the InputBaseUpDown control style  -->

            <!--

            <Style BasedOn="{StaticResource InputBaseUpDownStyle}" TargetType="{x:Bind controls:DecimalUpDown}" />
            <Style BasedOn="{StaticResource InputBaseUpDownStyle}" TargetType="{x:Bind controls:DoubleUpDown}" />
            <Style BasedOn="{StaticResource InputBaseUpDownStyle}" TargetType="{x:Bind controls:LongUpDown}" />

            -->

            <!--  Styles an Integer based numeric up down control based on the InputBaseUpDown control style  -->

            <!--

            <Style BasedOn="{StaticResource InputBaseUpDownStyle}" TargetType="{x:Bind controls:NumericUpDown}" />

            <Style BasedOn="{StaticResource InputBaseUpDownStyle}" TargetType="{x:Bind controls:SByteUpDown}" />
            <Style BasedOn="{StaticResource InputBaseUpDownStyle}" TargetType="{x:Bind controls:ShortUpDown}" />
            <Style BasedOn="{StaticResource InputBaseUpDownStyle}" TargetType="{x:Bind controls:FloatUpDown}" />
            <Style BasedOn="{StaticResource InputBaseUpDownStyle}" TargetType="{x:Bind controls:UIntegerUpDown}" />
            <Style BasedOn="{StaticResource InputBaseUpDownStyle}" TargetType="{x:Bind controls:UShortUpDown}" />
            <Style BasedOn="{StaticResource InputBaseUpDownStyle}" TargetType="{x:Bind controls:ULongUpDown}" />
            -->
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>
